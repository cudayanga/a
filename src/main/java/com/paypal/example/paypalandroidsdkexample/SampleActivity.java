package com.paypal.example.paypalandroidsdkexample;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.paypal.android.sdk.payments.PayPalAuthorization;import com.paypal.android.sdk.payments.PayPalConfiguration;import com.paypal.android.sdk.payments.PayPalFuturePaymentActivity;import com.paypal.android.sdk.payments.PayPalItem;import com.paypal.android.sdk.payments.PayPalOAuthScopes;import com.paypal.android.sdk.payments.PayPalPayment;import com.paypal.android.sdk.payments.PayPalPaymentDetails;import com.paypal.android.sdk.payments.PayPalProfileSharingActivity;import com.paypal.android.sdk.payments.PayPalService;import com.paypal.android.sdk.payments.PaymentActivity;import com.paypal.android.sdk.payments.PaymentConfirmation;import com.paypal.android.sdk.payments.ShippingAddress;import android.app.Activity;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import org.json.JSONException;import java.math.BigDecimal;import java.util.Arrays;import java.util.HashSet;import java.util.Set;/** * * THIS FILE IS OVERWRITTEN BY `androidSDK/src/<general|partner>sampleAppJava. * ANY UPDATES TO THIS FILE WILL BE REMOVED IN RELEASES. * * Basic sample using the SDK to make a payment or consent to future payments. * * For sample mobile backend interactions, see * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend */public class SampleActivity extends Activity {    private static final String TAG = "paymentExample";    private static final String CONFIG_ENVIRONMENT = PayPalConfiguration.ENVIRONMENT_SANDBOX;    private static final String CONFIG_CLIENT_ID = "AYhxwL8pFL9RmblMjPR1R1ZilP-M8Nr9-0BK69rBOOteJFhwQgT8mjcSMgoDmie1dqRK5oJKYNSJK2_D";    private static final int REQUEST_CODE_PAYMENT = 1;    private EditText amount;    private EditText username;    private static PayPalConfiguration config = new PayPalConfiguration()            .environment(CONFIG_ENVIRONMENT)            .clientId(CONFIG_CLIENT_ID);    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Intent intent = new Intent(this, PayPalService.class);        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);        startService(intent);        amount= (EditText) findViewById(R.id.editText);        username= (EditText) findViewById(R.id.editText2);    }    public void onBuyPressed(View pressed) {        PayPalPayment thingToBuy = getThingToBuy(PayPalPayment.PAYMENT_INTENT_SALE);        Intent intent = new Intent(SampleActivity.this, PaymentActivity.class);        intent.putExtra(PayPalService.EXTRA_PAYPAL_CONFIGURATION, config);        intent.putExtra(PaymentActivity.EXTRA_PAYMENT, thingToBuy);        startActivityForResult(intent, REQUEST_CODE_PAYMENT);    }    private PayPalPayment getThingToBuy(String paymentIntent) {        return new PayPalPayment(new BigDecimal(amount.getText().toString()), "USD", username.getText().toString(),                paymentIntent);    }    protected void displayResultText(String result) {        ((TextView)findViewById(R.id.txtResult)).setText("Result : " + result);        Toast.makeText(                getApplicationContext(),                result, Toast.LENGTH_LONG)                .show();    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == REQUEST_CODE_PAYMENT) {            if (resultCode == Activity.RESULT_OK) {                PaymentConfirmation confirm =                        data.getParcelableExtra(PaymentActivity.EXTRA_RESULT_CONFIRMATION);                if (confirm != null) {                    try {                        Intent intent = new Intent(SampleActivity.this,secondActivity.class);                        Bundle b= new Bundle();                        b.putString("amount",amount.getText().toString());                        b.putString("username",username.getText().toString());                        Log.i(TAG, confirm.toJSONObject().toString(4));                        Log.i(TAG, confirm.getPayment().toJSONObject().toString(4));                        /**                         *  TODO: send 'confirm' (and possibly confirm.getPayment() to your server for verification                         * or consent completion.                         * See https://developer.paypal.com/webapps/developer/docs/integration/mobile/verify-mobile-payment/                         * for more details.                         *                         * For sample mobile backend interactions, see                         * https://github.com/paypal/rest-api-sdk-python/tree/master/samples/mobile_backend                         */                        displayResultText("PaymentConfirmation info received from PayPal");                        amount.setText("");                        username.setText("");                        intent.putExtras(b);                        startActivity(intent);                    } catch (JSONException e) {                        Log.e(TAG, "an extremely unlikely failure occurred: ", e);                    }                }            } else if (resultCode == Activity.RESULT_CANCELED) {                Log.i(TAG, "The user canceled.");            } else if (resultCode == PaymentActivity.RESULT_EXTRAS_INVALID) {                Log.i(                        TAG,                        "An invalid Payment or PayPalConfiguration was submitted. Please see the docs.");            }        }    }    @Override    public void onDestroy() {        // Stop service when done        stopService(new Intent(this, PayPalService.class));        super.onDestroy();    }}